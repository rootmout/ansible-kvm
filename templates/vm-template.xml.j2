<domain type='{{ kvm_domain_type }}'>
  <name>{{ item.name }}</name>
{% if item.uuid is defined %}
  <uuid>{{ item.uuid }}</uuid>
{% endif %}
  <memory unit='MB'>{{ item.memory }}</memory>
  <vcpu>{{ item.vcpu }}</vcpu>
  <os>
    <type>hvm</type>
{% for dev in item['boot_devices'] %}
    <boot dev='{{ dev }}'/>
{% endfor %}
    <bootmenu enable='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <devices>
{% if item['graphics'] is defined and item['graphics']|bool %}
    <graphics type='spice' autoport='yes'/>
{% endif %}
{% if item['cdrom'] is defined %}
{%   if item['cdrom']['source'] is defined %}
    <disk type='file' device='cdrom'>
      <driver name='qemu' type='raw'/>
      <source file='{{ item['cdrom']['source'] }}'/>
      <target dev='hdc' bus='ide'/>
      <readonly/>
      <address type='drive' controller='0' bus='1' unit='0'/>
    </disk>
{%   endif %}
{% endif %}
{% if item['cloudinit'] is defined and item['cloudinit']['enabled']|bool %}
  <disk type='file' device='cdrom'>
      <driver name='qemu' type='raw'/>
      <source file='{{ kvm_cloudinit_path }}/{{ item['name'] }}.iso'/>
      <target dev='hdd' bus='ide'/>
      <readonly/>
      <address type='drive' controller='0' bus='1' unit='0'/> {# TODO: check the address value, can interfer with lines above #}
  </disk>
{% endif %}
{% for hd in item['disks'] %}
    <disk type='{{ hd.type | default('file') }}' device='disk'>
      <driver name='qemu' type='{{ 'raw' if hd.type == 'block' else kvm_images_format_type }}' cache='{{ kvm_images_cache_mode }}'/>
{%   if hd.type is not defined or hd.type == 'file' %}
      <source file='{{ hd.path | default(kvm_images_path ~ '/' ~ item['name'] ~ '_' ~ hd['name'] ~ '.' ~ kvm_images_format_type) }}'/>
{%   elif hd.type == 'block' %}
      <source dev='{{ hd.path }}'/>
{%   endif %}
{%   if hd.disk_driver|lower == 'virtio' %}
      <target dev='vd{{ "abcdefghijklmnopqrstuvwxyz"[loop.index0] }}' bus='{{ hd['disk_driver'] }}'/>
{%   elif hd.disk_driver|lower == 'sata' or hd['disk_driver']|lower == 'scsi' or hd['disk_driver']|lower == 'sd' %}
      <target dev='sd{{ "abcdefghijklmnopqrstuvwxyz"[loop.index0] }}' bus='{{ hd['disk_driver'] }}'/>
{%   endif %}
    </disk>
{% endfor %}
{% for int in item['network_interfaces'] %}
    <interface type='{{ int['type'] }}'>
{%   if int['mac'] is defined %}
      <mac address='{{ int['mac'] }}'/>
{%   endif %}
{%   if int['portgroup'] is not defined %}
      <source {{ int['type'] }}='{{ int['source'] }}'/>
{%   elif int['portgroup'] is defined %}
      <source {{ int['type'] }}='{{ int['source'] }}' portgroup='{{ int['portgroup'] }}'/>
{%   endif %}
      <model type='{{ int['network_driver'] }}'/>
    </interface>
{% endfor %}
    <console type='pty'>
      <target type='serial' port='0'/>
    </console>
{% for hostdev in item['hostdevs'] | default([], true) %}
    <hostdev mode="subsystem" type="{{ hostdev['type'] }}" {% if hostdev['type'] == 'pci' %}managed="{{ hostdev['managed'] | default("yes", true) }}"{% endif %} {% if hostdev['type'] == 'scsi_host' or hostdev['type'] == 'mdev' %}model="{{ hostdev['model'] }}"{% endif %}>
        {% if hostdev['alias'] is defined %}<alias name="{{ hostdev['alias'] }}"/>{% endif %}
        <source>
          <address domain="{{ hostdev['source']['domain'] }}" bus="{{ hostdev['source']['bus'] }}" slot="{{ hostdev['source']['slot'] }}" function="{{ hostdev['source']['function'] }}"/>
        </source>
        <address type="{{ hostdev['type'] }}" domain="{{ hostdev['destination']['domain'] }}" bus="{{ hostdev['destination']['bus'] }}" slot="{{ hostdev['destination']['slot'] }}" function="{{ hostdev['destination']['function'] }}"/>
    </hostdev>
{% endfor %}
  </devices>
</domain>
