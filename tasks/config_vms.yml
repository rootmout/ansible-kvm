---
- name: config_vms | Defining VM(s)
  become: true
  virt:
    name: "{{ item['name'] }}"
    command: define
    xml: "{{ lookup('template', 'vm-template.xml.j2') }}"
  when: > 
    item['host'] is not defined or
    inventory_hostname == item['host'])
  loop: "{{ kvm_vms }}"

- name: config_vms | Creating VM Disk(s)
  become: true
  qemu_img:
    dest: "{{ kvm_images_path }}/{{ item[1]['name'] }}.{{ kvm_images_format_type }}"
    size: "{{ item[1]['size'] }}"
    format: "{{ kvm_images_format_type }}"
  when: > 
    'host' not in item[0] or 
    inventory_hostname == item[0]['host']
  with_subelements:
    - "{{ kvm_vms }}"
    - disks

- name: config_vms | Setting VM State
  become: true
  virt:
    name: "{{ item['name'] }}"
    state: "{{ item['state'] }}"
  when: >
    item['host'] is not defined or 
    inventory_hostname == item['host']
  loop: "{{ kvm_vms }}"

- name: config_vms | Setting autostart status
  become: true
  virt:
    name: "{{ item['name'] }}"
    autostart: "{{ item['autostart'] | default(omit) }}"
    command: info
  when:
    - item['host'] is not defined
    - ansible_version.full is version('2.5', '>=')
  loop: "{{ kvm_vms }}"

- name: config_vms | Setting autostart status
  become: true
  virt:
    name: "{{ item['name'] }}"
    autostart: "{{ item['autostart'] | default(omit) }}"
    command: info
  when: >
    ansible_version.full is version('2.5', '>=') and
    item['host'] is not defined or
    inventory_hostname == item['host']
  loop: "{{ kvm_vms }}"
