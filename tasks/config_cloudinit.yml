---
- name: cloudinit | Ensure directory on hypervisor exist
  become: true
  file:
    mode: u=rwx,g=rx,o=rx
    path: "{{ kvm_cloudinit_path }}"
    state: directory

- name: cloudinit | Create per-vm seed directory
  become: true
  file:
    mode: u=rwx,g=rx,o=rx
    path: "{{ kvm_cloudinit_path }}/{{ item.host }}"
    state: directory
  loop: "{{ kvm_vms | list_cloudinit_files }}"

- name: cloudinit | Create files in seed directory
  become: true
  copy:
    content: "{{ item.content }}"
    dest: "{{ kvm_cloudinit_path }}/{{ item.host }}/{{ item.file }}"
  loop: "{{ kvm_vms | list_cloudinit_files }}"
  register: cloudinit_files

- name: cloudinit | declare cloudinit_updated_hosts
  set_fact:
    cloudinit_updated_hosts: []

- name: cloudinit | list host with an updated seed folder
  set_fact:
    cloudinit_updated_hosts: "{{ cloudinit_updated_hosts | union([item.item.host]) }}"
  loop: "{{ cloudinit_files.results }}"
  when: item.changed

- name: cloudinit | list host with cloudinit cache disabled
  set_fact:
    cloudinit_updated_hosts: "{{ cloudinit_updated_hosts | union([item.name]) }}"
  loop: "{{ kvm_vms }}"
  when: >
    item['cloudinit']['cache'] is defined and
    item['cloudinit']['cache'] == false

- name: cloudinit | create iso files
  become: true
  community.general.filesize:
    path: "{{ kvm_cloudinit_path }}/{{ item }}.iso"
    force: true
    size: 2M
  loop: "{{ cloudinit_updated_hosts }}"

- name: cloudinit | set fs and label on iso files
  become: true
  community.general.filesystem:
    fstype: vfat
    dev: "{{ kvm_cloudinit_path }}/{{ item }}.iso"
    opts: -n cidata -S 2048
  loop: "{{ cloudinit_updated_hosts }}"

- name: cloudinit | create mount directory
  become: true
  file:
    mode: u=rwx,g=rx,o=rx
    path: "{{ kvm_cloudinit_build_mount_path }}/{{ item }}_iso"
    state: directory
  loop: "{{ cloudinit_updated_hosts }}"

- name: cloudinit | mount iso files
  become: true
  ansible.posix.mount:
    path: "{{ kvm_cloudinit_build_mount_path }}/{{ item }}_iso"
    src: "{{ kvm_cloudinit_path }}/{{ item }}.iso"
    fstype: vfat
    state: ephemeral
    opts: rw
  loop: "{{ cloudinit_updated_hosts }}"

- name: cloudinit | copy seed files into iso
  become: true
  copy:
    src: "{{ kvm_cloudinit_path }}/{{ item }}/"
    dest: "{{ kvm_cloudinit_build_mount_path }}/{{ item }}_iso"
    remote_src: true
  loop: "{{ cloudinit_updated_hosts }}"

- name: cloudinit | unmount iso files
  become: true
  ansible.posix.mount:
    path: "{{ kvm_cloudinit_build_mount_path }}/{{ item }}_iso"
    state: unmounted
  loop: "{{ cloudinit_updated_hosts }}"

- name: cloudinit | remove mount directory
  become: true
  file:
    mode: u=rwx,g=rx,o=rx
    path: "{{ kvm_cloudinit_build_mount_path }}"
    state: absent

